{"version":3,"sources":["components/NavBar/NavHeaderLink.tsx","components/NavBar/NavBar.tsx","App.tsx","routes/HomePage.tsx","api.ts","components/Loader/Loader.tsx","helpers/getPersonParent.ts","helpers/getPeoplesWithParents.ts","components/PersonLink.tsx","enums/TableHeadNames.ts","components/PeopleTable.tsx","routes/PeoplePage.tsx","routes/NotFound.tsx","index.tsx"],"names":["NavHeaderLink","_ref","title","directTo","_jsx","NavLink","to","className","_ref2","isActive","cn","children","NavBar","role","_jsxs","App","Outlet","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","Loader","getPersonParent","parentName","persons","find","person","name","getPeoplesWithParents","peopleData","map","father","fatherName","mother","motherName","_objectSpread","undefined","PersonLink","Link","concat","slug","sex","TableHeadNames","PeopleTable","people","userSlug","useParams","Object","entries","_ref3","_slicedToArray","key","value","isSelected","born","died","PeoplePage","_useState","useState","_useState2","setPeopleData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","loadError","setLoadError","hasPeople","length","isNoPeopleAfterFetch","hasPeopleAfterFetch","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedData","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","_Fragment","NotFound","router","createHashRouter","createRoutesFromElements","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.334eac3f.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\n\ninterface Props {\n  title: string;\n  directTo: To;\n}\n\nexport const NavHeaderLink:FC<Props> = ({ title, directTo }) => (\n  <NavLink\n    to={directTo}\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavHeaderLink } from './NavHeaderLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavHeaderLink\n            title=\"Home\"\n            directTo=\"/\"\n          />\n\n          <NavHeaderLink\n            title=\"People\"\n            directTo=\"/people\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const getPersonParent = (\n  parentName: string | null,\n  persons: Person[],\n) => persons.find(person => person.name === parentName);\n","import { Person } from '../types';\nimport { getPersonParent } from './getPersonParent';\n\nexport const getPeoplesWithParents = (peopleData: Person[]) => (\n  peopleData.map(person => {\n    const father = getPersonParent(person.fatherName, peopleData);\n    const mother = getPersonParent(person.motherName, peopleData);\n\n    return {\n      ...person,\n      father: father || undefined,\n      mother: mother || undefined,\n    };\n  })\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink:FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","export enum TableHeadNames {\n  NAME = 'Name',\n  SEX = 'Sex',\n  BORN = 'Born',\n  DIED = 'Died',\n  MOTHER = 'Mother',\n  FATHER = 'Father',\n}\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { FC } from 'react';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\nimport { TableHeadNames } from '../enums/TableHeadNames';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable:FC<Props> = ({ people }) => {\n  const { userSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.entries(TableHeadNames).map(([key, value]) => (\n            <td key={key}>{value}</td>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const isSelected = userSlug === person.slug;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': isSelected })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeoplesWithParents } from '../helpers/getPeoplesWithParents';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peopleData, setPeopleData] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState('');\n\n  const hasPeople = peopleData.length > 0;\n  const isNoPeopleAfterFetch = !hasPeople && !isLoading;\n  const hasPeopleAfterFetch = hasPeople && !isLoading;\n\n  const fetchData = async () => {\n    try {\n      const data = await getPeople();\n      const preparedData = getPeoplesWithParents(data);\n\n      setPeopleData(preparedData);\n    } catch (error) {\n      setLoadError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleAfterFetch && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {hasPeopleAfterFetch && <PeopleTable people={peopleData} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route, RouterProvider, createHashRouter, createRoutesFromElements,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\nimport { HomePage } from './routes/HomePage';\nimport { PeoplePage } from './routes/PeoplePage';\nimport { NotFound } from './routes/NotFound';\n\nconst router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<App />}>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\">\n        <Route index element={<PeoplePage />} />\n        <Route path=\":userSlug/\" element={<PeoplePage />} />\n      </Route>\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route path=\"*\" element={<NotFound />} />\n    </Route>,\n  ),\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <RouterProvider router={router} />,\n  );\n"],"sourceRoot":""}