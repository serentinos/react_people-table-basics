{"version":3,"sources":["components/NavBar/NavHeaderLink.tsx","components/NavBar/NavBar.tsx","App.tsx","routes/HomePage.tsx","api.ts","components/Loader/Loader.tsx","helpers/getPersonParent.ts","helpers/getPeoplesWithParents.ts","components/PersonLink.tsx","components/PeopleTable.tsx","routes/PeoplePage.tsx","routes/NotFound.tsx","index.tsx"],"names":["NavHeaderLink","_ref","title","directTo","_jsx","NavLink","to","className","_ref2","isActive","cn","children","NavBar","role","_jsxs","App","Outlet","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","Loader","getPersonParent","parentName","persons","find","person","name","getPeoplesWithParents","peoples","map","father","fatherName","mother","motherName","_objectSpread","undefined","PersonLink","Link","concat","slug","sex","PeopleTable","people","userSlug","useParams","isSelected","born","died","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeoples","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","loadError","setLoadError","isAviablePeople","length","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedData","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","_Fragment","NotFound","router","createHashRouter","createRoutesFromElements","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.fd580498.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  title: string,\n  directTo: string,\n}\n\nexport const NavHeaderLink:FC<Props> = ({ title, directTo }) => (\n  <NavLink\n    to={directTo}\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavHeaderLink } from './NavHeaderLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavHeaderLink\n            title=\"Home\"\n            directTo=\"/\"\n          />\n\n          <NavHeaderLink\n            title=\"People\"\n            directTo=\"/people\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const getPersonParent = (\n  parentName: string | null,\n  persons: Person[],\n) => {\n  return persons.find(person => person.name === parentName);\n};\n","import { Person } from '../types';\nimport { getPersonParent } from './getPersonParent';\n\nexport const getPeoplesWithParents = (peoples: Person[]) => (\n  peoples.map(person => {\n    const father = getPersonParent(person.fatherName, peoples);\n    const mother = getPersonParent(person.motherName, peoples);\n\n    return {\n      ...person,\n      father: father || undefined,\n      mother: mother || undefined,\n    };\n  })\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink:FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { FC } from 'react';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable:FC<Props> = ({ people }) => {\n  const { userSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const isSelected = userSlug === person.slug;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': isSelected })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? (<PersonLink person={person.mother} />)\n                  : (person.motherName || '-')}\n              </td>\n              <td>\n                {person.father\n                  ? (<PersonLink person={person.father} />)\n                  : (person.fatherName || '-')}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeoplesWithParents } from '../helpers/getPeoplesWithParents';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState('');\n\n  const isAviablePeople = peoples.length > 0;\n\n  const fetchData = async () => {\n    try {\n      const data = await getPeople();\n      const preparedData = getPeoplesWithParents(data);\n\n      setPeoples(preparedData);\n    } catch (error) {\n      setLoadError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isAviablePeople && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isAviablePeople && !isLoading && <PeopleTable people={peoples} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route, RouterProvider, createHashRouter, createRoutesFromElements,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\nimport { HomePage } from './routes/HomePage';\nimport { PeoplePage } from './routes/PeoplePage';\nimport { NotFound } from './routes/NotFound';\n\nconst router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<App />}>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\">\n        <Route index element={<PeoplePage />} />\n        <Route path=\":userSlug/\" element={<PeoplePage />} />\n      </Route>\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route path=\"*\" element={<NotFound />} />\n    </Route>,\n  ),\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <RouterProvider router={router} />,\n  );\n"],"sourceRoot":""}